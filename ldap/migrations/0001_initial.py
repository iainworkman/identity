# Generated by Django 3.2.16 on 2022-12-07 01:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sisulu.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dn', models.CharField(help_text='The distinguished name of the container', max_length=250)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['dn'],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Human readable name for the domain.', max_length=150, unique=True)),
                ('host', models.CharField(help_text='The address to connect to for the domain. Can be a single instance, or the domain as a whole.', max_length=150)),
                ('user_identifier_attribute', models.CharField(default='uid', help_text='Attribute used as the unique identifier for user entries (default: uid)', max_length=150)),
                ('group_identifier_attribute', models.CharField(default='gid', help_text='Attribute used as the unique identifier for group entries (default: gid)', max_length=150)),
                ('port', models.IntegerField(help_text='The port to connect to the domain on.')),
                ('use_ssl', models.BooleanField(default=True, help_text='Whether to encrypt communication with the domain.')),
                ('search_base', models.CharField(blank=True, help_text='Optional dn in the domain to start searches from. If not supplied, then searches will be performed from the root of the domain.', max_length=250)),
                ('bind_user_dn', models.CharField(blank=True, help_text='DN of the user which will be used to bind to the domain.', max_length=250)),
                ('bind_user_password', sisulu.fields.EncryptedCharField(blank=True, help_text='Password used when binding to the domain.', key=b'cjrzDQRuWipNpgJuzQOvJ22pGVfNLq9IffI6DHHURlw=', max_length=250)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DomainEntrySource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name for the entry source.', max_length=250)),
                ('read_filter', models.TextField(blank=True, help_text='LDAP filters to apply when reading entries.')),
                ('is_read_only', models.BooleanField(default=False, help_text='Whether to write data back to entries from this source')),
                ('search_scope', models.CharField(choices=[('BASE', 'BaseObject'), ('LEVEL', 'SingleLevel'), ('SUBTREE', 'WholeSubtree')], max_length=15)),
                ('is_enabled', models.BooleanField(default=True)),
                ('source_type', models.CharField(choices=[('g', 'Group'), ('u', 'User')], max_length=4)),
                ('create_container', models.ForeignKey(blank=True, help_text='Container where entries for this source will be created.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='creating_entry_sources', to='ldap.container')),
                ('read_container', models.ForeignKey(help_text='Container to read entries from.', on_delete=django.db.models.deletion.PROTECT, related_name='reading_entry_sources', to='ldap.container')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserDomainLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dn', models.CharField(help_text='The location of the entry in the domain', max_length=250)),
                ('is_enabled', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=150)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_links', to=settings.AUTH_USER_MODEL)),
                ('user_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_links', to='ldap.domainentrysource')),
            ],
            options={
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='GroupDomainLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dn', models.CharField(help_text='The location of the entry in the domain', max_length=250)),
                ('is_enabled', models.BooleanField(default=True)),
                ('group_name', models.CharField(max_length=250)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='group_links', to='auth.group')),
                ('group_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='group_links', to='ldap.domainentrysource')),
            ],
            options={
                'ordering': ['group_name'],
            },
        ),
        migrations.AddField(
            model_name='container',
            name='domain',
            field=models.ForeignKey(help_text='The domain which the container belongs to.', on_delete=django.db.models.deletion.PROTECT, related_name='containers', to='ldap.domain'),
        ),
    ]
